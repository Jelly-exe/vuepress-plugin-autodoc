(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{208:function(t,a,n){"use strict";n.r(a);var e=n(28),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"vuepress-autodoc-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuepress-autodoc-plugin"}},[t._v("#")]),t._v(" Vuepress Autodoc Plugin")]),t._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),n("p",[t._v("VuePress plugin for automatic code documentation via "),n("a",{attrs:{href:"https://jsdoc.app/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSDoc"),n("OutboundLink")],1),t._v(" with an API similar to "),n("a",{attrs:{href:"http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("sphinx.ext.autodoc")]),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),n("h3",{attrs:{id:"install-in-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#install-in-project"}},[t._v("#")]),t._v(" Install in Project")]),t._v(" "),n("p",[t._v("To use this library in a Vue project, add the package to your package dependencies via:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev vuepress-plugin-autodoc\n")])])]),n("p",[t._v("Or, with "),n("a",{attrs:{href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("yarn"),n("OutboundLink")],1),t._v(":")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D vuepress-plugin-autodoc\n")])])]),n("h2",{attrs:{id:"quickstart"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#quickstart"}},[t._v("#")]),t._v(" Quickstart")]),t._v(" "),n("h3",{attrs:{id:"configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),n("p",[t._v("To use this in documentation for a project, follow the VuePress "),n("a",{attrs:{href:"https://vuepress.vuejs.org/plugin/using-a-plugin.html#use-plugins-from-a-dependency",target:"_blank",rel:"noopener noreferrer"}},[t._v("guidelines"),n("OutboundLink")],1),t._v(". Here is a quick example:")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuepress-plugin-autodoc'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"referencing-code"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#referencing-code"}},[t._v("#")]),t._v(" Referencing Code")]),t._v(" "),n("p",[t._v("Once you've configured VuePress to use this plugin, you can automatically generate API documentation for code in your project using:")]),t._v(" "),n("div",{staticClass:"language-markdown extra-class"},[n("pre",{pre:!0,attrs:{class:"language-markdown"}},[n("code",[n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" API Section")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" Full Documentation")]),t._v("\n\n/autodoc src/index.js\n\n\n"),n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" Document Specific Objects")]),t._v("\n\n/autodoc src/index.js myFunction MyClass myConst\n\n")])])]),n("p",[t._v("This will automatically render styled API documentation for code elements with JSDoc-compatible docstrings.")]),t._v(" "),n("p",[t._v("This type of dynamic auto-documentation allows developers to be clear in how their API is structured, providing context alongside their API documentation. For example, let's say we have a file in our project that looks like:")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// contents of src/index.js")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* Generic number class\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * Constructor for object.\n  * @param {Number} input - Number to add.\n  * @param {String} name - Name for number.\n  */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Return number from class.\n   * @return {Number} The number value.\n   */")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * Add another number and return result.\n    * @param {Number} other - Other number to add.\n    * @return {Number} Other number to add.\n    */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("other")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" other"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Function for adding two numbers.\n * @param {Number} x - Left operand.\n * @param {Number} y - Right operand.\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Object with functions and data.\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" utils "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Item in utils array.\n   */")]),t._v("\n   item"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Echo value.\n   *\n   * @param {Number} value - Value to echo.\n   */")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("echo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("We can render pre-formatted code documentaton for specific items using the following markdown syntax:")]),t._v(" "),n("div",{staticClass:"language-markdown extra-class"},[n("pre",{pre:!0,attrs:{class:"language-markdown"}},[n("code",[t._v("// contents of docs/README.md\n\n"),n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" API Documentation")]),t._v("\n\nHere is documentation for specific elements from our module:\n\n/autodoc src/index.js add Number utils\n\nAnd here are all of the documented elements:\n\n/autodoc src/index.js\n\n")])])]),n("p",[t._v("To show sidebar links for auto-documented items, place a header tag with the name of the item immediately before the "),n("code",[t._v("/autodoc")]),t._v(" statement:")]),t._v(" "),n("div",{staticClass:"language-markdown extra-class"},[n("pre",{pre:!0,attrs:{class:"language-markdown"}},[n("code",[n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" Classes")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" Number")]),t._v("\n\n/autodoc src/index.js Number\n\n"),n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" Functions")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" add")]),t._v("\n\n/autodoc src/index.js add\n\n"),n("span",{pre:!0,attrs:{class:"token title important"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" subtract")]),t._v("\n\n/autodoc src/index.js subtract\n\n")])])]),n("h2",{attrs:{id:"example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),n("p",[t._v("Here is an example of a class definition:")]),t._v(" "),n("h3",{attrs:{id:"number"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" "),n("span",{staticClass:"badge tip",staticStyle:{"vertical-align":"top"}},[t._v("class")]),t._v(" "),n("code",[t._v("Number(input, name)")])]),t._v(" "),n("blockquote",[n("p",[t._v("Generic number class")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("Parameters")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("input")]),t._v(" ("),n("em",[t._v("Number")]),t._v(") - Number to add.")]),t._v(" "),n("li",[n("code",[t._v("name")]),t._v(" ("),n("em",[t._v("String")]),t._v(") - Name for number.")])])]),t._v(" "),n("blockquote",{staticClass:"scoped error"},[n("h4",{attrs:{id:"value"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" "),n("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[t._v("function")]),t._v(" "),n("code",[t._v("value()")])]),t._v(" "),n("blockquote",[n("p",[t._v("Return number from class.")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("Returns")])]),t._v(" "),n("ul",[n("li",[t._v(" ("),n("em",[t._v("Number")]),t._v(") - The number value.")])])])]),t._v(" "),n("blockquote",{staticClass:"scoped error"},[n("h4",{attrs:{id:"increment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#increment"}},[t._v("#")]),t._v(" "),n("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[t._v("function")]),t._v(" "),n("code",[t._v("increment(other)")])]),t._v(" "),n("blockquote",[n("p",[t._v("Add another number and return result.")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("Parameters")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("other")]),t._v(" ("),n("em",[t._v("Number")]),t._v(") - Other number to add.")])])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("Returns")])]),t._v(" "),n("ul",[n("li",[t._v(" ("),n("em",[t._v("Number")]),t._v(") - Other number to add.")])])])]),t._v(" "),n("p",[t._v("And here is an example of a function definition:")]),t._v(" "),n("h3",{attrs:{id:"add"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[t._v("#")]),t._v(" "),n("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[t._v("function")]),t._v(" "),n("code",[t._v("add(x, y)")])]),t._v(" "),n("blockquote",[n("p",[t._v("Function for adding two numbers.")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("Parameters")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("x")]),t._v(" ("),n("em",[t._v("Number")]),t._v(") - Left operand.")]),t._v(" "),n("li",[n("code",[t._v("y")]),t._v(" ("),n("em",[t._v("Number")]),t._v(") - Right operand.")])])]),t._v(" "),n("p",[t._v("And finally, a constatnt definition:")]),t._v(" "),n("h3",{attrs:{id:"utils"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#utils"}},[t._v("#")]),t._v(" "),n("span",{staticClass:"badge tip",staticStyle:{"vertical-align":"top"}},[t._v("constant")]),t._v(" "),n("code",[t._v("utils")])]),t._v(" "),n("blockquote",[n("p",[t._v("Object with functions and data.")])]),t._v(" "),n("blockquote",{staticClass:"scoped warning"},[n("h4",{attrs:{id:"item"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#item"}},[t._v("#")]),t._v(" "),n("span",{staticClass:"badge warning",staticStyle:{"vertical-align":"top"}},[t._v("member")]),t._v(" "),n("code",[t._v("item")])]),t._v(" "),n("blockquote",[n("p",[t._v("Item in utils array.")])])]),t._v(" "),n("blockquote",{staticClass:"scoped error"},[n("h4",{attrs:{id:"echo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#echo"}},[t._v("#")]),t._v(" "),n("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[t._v("function")]),t._v(" "),n("code",[t._v("echo(value)")])]),t._v(" "),n("blockquote",[n("p",[t._v("Echo value.")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("Parameters")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("value")]),t._v(" ("),n("em",[t._v("Number")]),t._v(") - Value to echo.")])])])]),t._v(" "),n("style",[t._v("\n.badge {\n  display: inline-block;\n  font-size: 20px;\n  font-family: monospace;\n  height: 28px;\n  line-height: 28px;\n  border-radius: 3px;\n  padding: 0 6px;\n  color: #fff;\n  background-color: #42b983;\n}\n.scoped .badge,\nblockquote .badge {\n  font-size: 15px;\n  height: 23px;\n  line-height: 23px;\n}\n.badge.warning {\n  background-color: #e7c000;\n}\n.badge.error {\n  background-color: #da5961;\n}\n.badge.tip {\n  background-color: #42b983;\n}\nblockquote.scoped.warning {\n  border-color: #e7c000;\n}\nblockquote.scoped.error {\n  border-color: #da5961;\n}\nblockquote.scoped.tip {\n  border-color: #42b983;\n}\n\n")])])}),[],!1,null,null,null);a.default=s.exports}}]);